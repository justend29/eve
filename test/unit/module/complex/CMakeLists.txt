##==================================================================================================
##  EVE - Expressive Vector Engine
##  Copyright : EVE Contributors & Maintainers
##  SPDX-License-Identifier: MIT
##==================================================================================================

add_custom_target(unit.complex.exe          )
add_dependencies(unit.exe unit.complex.exe  )

make_unit("unit.complex"  constructor.cpp   )
make_unit("unit.complex"  operators.cpp     )
make_unit("unit.complex"  abs.cpp           )
make_unit("unit.complex"  arg.cpp           )
make_unit("unit.complex"  conj.cpp          )
make_unit("unit.complex"  cos.cpp           )
make_unit("unit.complex"  cosh.cpp          )
make_unit("unit.complex"  div.cpp           )
make_unit("unit.complex"  exp.cpp           )
make_unit("unit.complex"  exp_i.cpp         )
make_unit("unit.complex"  exp_ipi.cpp       )
make_unit("unit.complex"  i.cpp             )
make_unit("unit.complex"  if_else.cpp       )
make_unit("unit.complex"  is_finite.cpp     )
make_unit("unit.complex"  is_imag.cpp       )
make_unit("unit.complex"  is_infinite.cpp   )
make_unit("unit.complex"  is_nan.cpp        )
make_unit("unit.complex"  is_not_finite.cpp )
make_unit("unit.complex"  is_real.cpp       )
make_unit("unit.complex"  log.cpp           )
make_unit("unit.complex"  log_abs.cpp       )
make_unit("unit.complex"  log10.cpp         )
make_unit("unit.complex"  mul.cpp           )
make_unit("unit.complex"  mul_i.cpp         )
make_unit("unit.complex"  mul_mi.cpp        )
make_unit("unit.complex"  polar.cpp         )
make_unit("unit.complex"  pow.cpp           )
make_unit("unit.complex"  proj.cpp          )
make_unit("unit.complex"  real.cpp          )
make_unit("unit.complex"  rec.cpp           )
make_unit("unit.complex"  sin.cpp           )
make_unit("unit.complex"  sinh.cpp          )
make_unit("unit.complex"  sqr.cpp           )
make_unit("unit.complex"  sqr_abs.cpp       )
make_unit("unit.complex"  sqrt.cpp          )
make_unit("unit.complex"  tan.cpp           )
make_unit("unit.complex"  tanh.cpp          )
